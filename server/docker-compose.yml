x-build: &build
    context: .
    dockerfile: ../laravel.Dockerfile

networks:
    server:
        driver: bridge

volumes:
    server-postgres: { }
    server-storage: { }

services:
    server-vendor-installer:
        build: { <<: *build, target: vendor-source }
        env_file: .env.common
        volumes:
            - ./:/workdir
        networks:
            - server

    server-app:
        build: { <<: *build, target: server }
        env_file: .env.common
        restart: on-failure
        depends_on:
            server-postgres: { condition: service_healthy }
            server-migrator: { condition: service_completed_successfully }
        volumes:
            - server-storage:/workdir/storage
            - ./:/workdir
        networks:
            - server

    server-migrator:
        build: { <<: *build, target: server }
        env_file: .env.common
        restart: on-failure
        command: php artisan migrate --force --seed
        depends_on:
            server-postgres: { condition: service_healthy }
        networks:
            - server

    server-nginx:
        image: nginx:latest
        ports:
            - ${SERVER_PORT?}:80
        restart: unless-stopped
        depends_on:
            server-app: { condition: service_started }
        volumes:
            - ./.nginx/nginx.conf/default.conf:/etc/nginx/conf.d/default.conf
            - ./:/workdir
            - server-storage:/workdir/storage
        networks:
            - server

    server-postgres:
        image: postgres:15-alpine
        environment:
            - POSTGRES_DB=${POSTGRES_DB?}
            - POSTGRES_USER=${POSTGRES_USER?}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?}
        ports:
            - 5433:5432
        restart: always
        healthcheck:
            test: pg_isready -d ${POSTGRES_DB?} -U ${POSTGRES_USER?}
        volumes:
            - server-postgres:/var/lib/postgresql/data
        networks:
            - server
